{"ast":null,"code":"import _toConsumableArray from\"/Users/killianpin/Downloads/todo-react-master/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/killianpin/Downloads/todo-react-master/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/killianpin/Downloads/todo-react-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from\"react\";import Form from\"./components/Form\";import FilterButton from\"./components/FilterButton\";import Todo from\"./components/Todo\";import{nanoid}from\"nanoid\";function usePrevious(value){var ref=useRef();useEffect(function(){ref.current=value;});return ref.current;}var FILTER_MAP={All:function All(){return true;},Active:function Active(task){return!task.completed;},Completed:function Completed(task){return task.completed;}};var FILTER_NAMES=Object.keys(FILTER_MAP);function App(props){var _useState=useState(props.tasks),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];var _useState3=useState('All'),_useState4=_slicedToArray(_useState3,2),filter=_useState4[0],setFilter=_useState4[1];function toggleTaskCompleted(id){var updatedTasks=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){// use object spread to make a new obkect\n// whose `completed` prop has been inverted\nreturn _objectSpread({},task,{completed:!task.completed});}return task;});setTasks(updatedTasks);}function deleteTask(id){var remainingTasks=tasks.filter(function(task){return id!==task.id;});setTasks(remainingTasks);}function editTask(id,newName){var editedTaskList=tasks.map(function(task){// if this task has the same ID as the edited task\nif(id===task.id){//\nreturn _objectSpread({},task,{name:newName});}return task;});setTasks(editedTaskList);}var taskList=tasks.filter(FILTER_MAP[filter]).map(function(task){return/*#__PURE__*/React.createElement(Todo,{id:task.id,name:task.name,completed:task.completed,key:task.id,toggleTaskCompleted:toggleTaskCompleted,deleteTask:deleteTask,editTask:editTask});});var filterList=FILTER_NAMES.map(function(name){return/*#__PURE__*/React.createElement(FilterButton,{key:name,name:name,isPressed:name===filter,setFilter:setFilter});});function addTask(name){var newTask={id:\"todo-\"+nanoid(),name:name,completed:false};setTasks([].concat(_toConsumableArray(tasks),[newTask]));}var tasksNoun=taskList.length!==1?'tasks':'task';var headingText=\"\".concat(taskList.length,\" \").concat(tasksNoun,\" remaining\");var listHeadingRef=useRef(null);var prevTaskLength=usePrevious(tasks.length);useEffect(function(){if(tasks.length-prevTaskLength===-1){listHeadingRef.current.focus();}},[tasks.length,prevTaskLength]);return/*#__PURE__*/React.createElement(\"div\",{className:\"todoapp stack-large\"},/*#__PURE__*/React.createElement(Form,{addTask:addTask}),/*#__PURE__*/React.createElement(\"div\",{className:\"filters btn-group stack-exception\"},filterList),/*#__PURE__*/React.createElement(\"h2\",{id:\"list-heading\",tabIndex:\"-1\",ref:listHeadingRef},headingText),/*#__PURE__*/React.createElement(\"ul\",{role:\"list\",className:\"todo-list stack-large stack-exception\",\"aria-labelledby\":\"list-heading\"},taskList));}export default App;","map":{"version":3,"sources":["/Users/killianpin/Downloads/todo-react-master/src/App.js"],"names":["React","useState","useRef","useEffect","Form","FilterButton","Todo","nanoid","usePrevious","value","ref","current","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","filter","setFilter","toggleTaskCompleted","id","updatedTasks","map","deleteTask","remainingTasks","editTask","newName","editedTaskList","name","taskList","filterList","addTask","newTask","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","focus"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\nimport { nanoid } from \"nanoid\";\n\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        return {...task, completed: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n  .filter(FILTER_MAP[filter])\n  .map(task => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}